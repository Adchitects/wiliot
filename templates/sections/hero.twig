{% set buttonsMatrix = null %}
{% set image = null %}
{% if entry is defined %}
	{% set subtitle = entry.heroSubtitle %}
	{% set title = entry.heroTitle %}
	{% set size = entry.heroSizes.value %}
	{% set descriptionBold = entry.heroDescriptionBold %}
	{% set description = entry.heroDescription %}
	{% if entry.heroButtonsMatrix %}
		{% set buttonsMatrix = entry.heroButtonsMatrix.all() %}
	{% endif %}
    {% if entry.heroImage %}
        {% set image = entry.heroImage.one() %}
    {% endif %}
{% elseif category is defined %}
	{% set subtitle = category.heroSubtitle %}
	{% set title = category.heroTitle %}
	{% set size = category.heroSizes.value %}
{% endif %}
{% if entry is defined or category is defined %}
	<section {% if sectionId is defined %} id="{{ sectionId }}" {% endif %} class="u-section u-section--hero is-{{ size }} {{ image ? 'is-with-image' : null }} js-bg-shape-hld">
		<div class="bg-shape bg-shape--top-right js-bg-shape" data-version="top-right">
			<img class="s1 js-s1 js-lazy" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 3 2'%3E%3C/svg%3E" data-src="{{ alias('@web/src/img/bg-shape/optimized/top-right-1.png' )}}" alt="Background shape blurry blob">
			<img class="s2 js-s2 js-lazy" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 3 2'%3E%3C/svg%3E" data-src="{{ alias('@web/src/img/bg-shape/optimized/top-right-2.png' )}}" alt="Background shape blurry blob">
			<img class="s3 js-s3 js-lazy" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 3 2'%3E%3C/svg%3E" data-src="{{ alias('@web/src/img/bg-shape/optimized/top-right-3.png' )}}" alt="Background shape blurry blob">
		</div>
		<div class="bg-shape bg-shape--bottom-left js-bg-shape" data-version="bottom-left">
			<img class="s2 js-s2 js-lazy" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 3 2'%3E%3C/svg%3E" data-src="{{ alias('@web/src/img/bg-shape/optimized/bottom-left-2.png' )}}" alt="Background shape blurry blob">
		</div>
		<div class="hero">
			<div class="hero__bg"></div>
			<div class="hero__text-hld {{ image ? 'hero__text-hld--with-image' : null }} u-wrapper {{ image ? 'u-wrapper--medium-wide' : null }}">
				<div class="hero__text">
					{% if subtitle %}
						<span class="hero__subtitle u-subtitle u-subtitle--big">{{ subtitle }}</span>
					{% endif %}
					{% if title %}
						<h1 class="hero__title u-title u-title--big">{{ title|nl2br }}</h1>
					{% endif %}
					{% if descriptionBold is defined and descriptionBold %}
						<p class="hero__description hero__description--bold">{{ descriptionBold|nl2br }}</p>
					{% endif %}
					{% if description is defined and description %}
						<p class="hero__description">{{ description|nl2br }}</p>
					{% endif %}
					{% if buttonsMatrix %}
						<div class="buttons-hld">
							{% for item in buttonsMatrix %}
								{% set button = item.button %}
                                {% set hubspotFormId = item.hubspotFormId %}
                                {% if hubspotFormId %}
                                    <div class="js-modal-hld">
                                        <button class="btn btn--{{ loop.index }} u-btn {{ loop.index == 1 ? 'u-btn--light' : 'u-btn--accent' }} js-modal-btn">
                                            <span class="text">{{ button.customText }}</span>
                                        </button>
                                        <div class="subscribe-modal js-modal-modal">
                                            <div class="overlay js-modal-close"></div>
                                            <div class="subscribe-modal__inner">
                                                <div class="subscribe-modal__modal">
                                                    <div class="form-hld">
                                                        <script charset="utf-8" type="text/javascript" src="//js.hsforms.net/forms/v2.js"></script>
                                                        <script
                                                            src="https://code.jquery.com/jquery-3.6.0.min.js"
                                                            integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
                                                            crossorigin="anonymous">
                                                        </script>
                                                        <script>
                                                            function handleState() {
                                                                const fields = document.querySelectorAll('.field input');
                                                                const selects = document.querySelectorAll('.hs-fieldtype-select select');
                                                                if (fields && fields.length > 0) {
                                                                    fields.forEach(field => {
                                                                        field.addEventListener('input', () => {
                                                                            field.parentNode.parentNode.classList.add('is-active');
                                                                            if (!field.value) {
                                                                                field.parentNode.parentNode.classList.remove('is-active');
                                                                            }
                                                                        });
                                                                    });
                                                                }
                                                                if (selects && selects.length > 0) {
                                                                    selects.forEach(select => {
                                                                        select.addEventListener('change', () => {
                                                                            select.parentNode.parentNode.classList.add('is-active');
                                                                            handleState();
                                                                        });
                                                                    });
                                                                }
                                                            };
                                                            hbspt.forms.create({
                                                                region: "na1",
                                                                portalId: "4249967",
                                                                formId: "{{ hubspotFormId }}",
                                                                onFormReady: function() {
                                                                    document.body.classList.add('is-buy-page-form');
                                                                    handleState();
                                                                },
                                                            });
                                                        </script>
                                                    </div>
                                                </div>
                                                <span class="subscribe-modal__close js-modal-close">
                                                    <span class="icon icon-close"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                {% else %}
                                    <a href="{{ button.url }}" target="{{ button.target ? '_blank' : '_self' }}" rel="{{ button.target ? 'noopener noreferrer' : null }}" class="btn btn--{{ loop.index }} u-btn {{ loop.index == 1 ? 'u-btn--light' : 'u-btn--accent' }}">
                                        <span class="text">{{ button.customText }}</span>
                                    </a>
                                {% endif %}
							{% endfor %}
						</div>
					{% endif %}
				</div>
                {% if image %}
					<img src="{{ image.getUrl() }}" alt="{{ title }}" class="hero__image">
				{% endif %}
			</div>
		</div>
	</section>
{% endif %}
